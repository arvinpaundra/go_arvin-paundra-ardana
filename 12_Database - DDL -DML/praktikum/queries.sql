-- 1. TODO MEMBUAT DATABASE BERNAMA alta_online_shop
CREATE DATABASE IF NOT EXISTS alta_online_shop;
USE alta_online_shop;

-- 2. TODO MEMBUAT TABEL YANG TELAH DIDEFINISIKAN PADA SAAT MEMBUAT ERD
-- MEMBUAT TABEL USERS
CREATE TABLE IF NOT EXISTS users (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  name VARCHAR(255) NOT NULL,
  address TEXT,
  bith_date DATETIME,
  status_user ENUM('active', 'inactive'),
  gender ENUM('1', '0'),
  email VARCHAR(50) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- MEMBUAT TABEL PRODUCT_TYPES
CREATE TABLE IF NOT EXISTS product_types (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  type VARCHAR(100),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- MEMBUAT TABEL OPERATORS
CREATE TABLE IF NOT EXISTS operators (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  operator_name VARCHAR(50),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- MEMBUAT TABEL PRODUCTS
CREATE TABLE IF NOT EXISTS products (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  product_type_id BIGINT NOT NULL,
  operator_id BIGINT NOT NULL,
  product_name VARCHAR(255) NOT NULL,
  price INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FOREIGN KEY (product_type_id) REFERENCES product_types(id),
  CONSTRAINT FOREIGN KEY (operator_id) REFERENCES operators(id)
);

-- MEMBUAT TABEL PRODUCT_DESCRIPTION
CREATE TABLE IF NOT EXISTS product_description (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  product_id BIGINT NOT NULL,
  description TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FOREIGN KEY (product_id) REFERENCES products(id)
);

-- MEMBUAT TABEL PAYMENT_METHODS
CREATE TABLE IF NOT EXISTS payment_methods (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  method_name VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- MEMBUAT TABEL TRANSACTIONS
CREATE TABLE IF NOT EXISTS transactions (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  user_id BIGINT NOT NULL,
  product_id BIGINT NOT NULL,
  invoice CHAR(15) UNIQUE NOT NULL,
  CONSTRAINT FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT FOREIGN KEY (product_id) REFERENCES products(id)
);

-- MEMBUAT TABEL TRANSACTION_DETAIL
CREATE TABLE IF NOT EXISTS transaction_detail (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  transaction_id BIGINT NOT NULL,
  payment_method_id BIGINT NOT NULL,
  total_price INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FOREIGN KEY (transaction_id) REFERENCES transactions(id),
  CONSTRAINT FOREIGN KEY (payment_method_id) REFERENCES payment_methods(id)
);

-- MEMBUAT TABEL HISTORIES
CREATE TABLE IF NOT EXISTS histories (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  user_id BIGINT NOT NULL,
  product_id BIGINT NOT NULL,
  transaction_id BIGINT NOT NULL,
  transaction_detail_id BIGINT NOT NULL,
  status ENUM('pending', 'deny', 'settlement'),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT FOREIGN KEY (product_id) REFERENCES products(id),
  CONSTRAINT FOREIGN KEY (transaction_id) REFERENCES transactions(id),
  CONSTRAINT FOREIGN KEY (transaction_detail_id) REFERENCES transaction_detail(id)
);

-- 3. TODO MEMBUAT TABEL KURIR
CREATE TABLE IF NOT EXISTS couriers (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  name VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 4. TODO MENAMBAHKAN KOLOM ONGKOS_DASAR PADA TABEL KURIR
ALTER TABLE couriers ADD ongkos_kirim INT NOT NULL;

-- 5. TODO MENGUBAH NAMA TABEL KURIR MENJADI TABEL SHIPPING
RENAME TABLE couriers TO shipping;

-- 6. TODO MENGHAPUS TABEL SHIPPING
DROP TABLE IF EXISTS shipping;

-- 7. TODO MENAMBAHKAN ENTITY BARU DENGAN RELASI 1-to-1, 1-to-many, many-to-many
-- 1-to-1 MENAMBAHKAN TABEL PAYMENT_METHOD_DESCRIPTION
CREATE TABLE IF NOT EXISTS payment_method_description (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  payment_method_id BIGINT NOT NULL,
  description TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FOREIGN KEY (payment_method_id) REFERENCES payment_methods(id)
);

-- 1-to-many MEMBUAT TABEL ALAMAT UNTUK MASING USERS
ALTER TABLE users DROP address;

CREATE TABLE IF NOT EXISTS addresses (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  user_id BIGINT NOT NULL,
  address TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FOREIGN KEY (user_id) REFERENCES users(id)
);

-- many-to-many MENAMBAHKAN TABEL USER_PAYMENT_METHOD_DETAIL
CREATE TABLE IF NOT EXISTS user_payment_method_detail (
  id BIGINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  user_id BIGINT NOT NULL,
  payment_method_id BIGINT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT FOREIGN KEY (payment_method_id) REFERENCES payment_methods(id)
);